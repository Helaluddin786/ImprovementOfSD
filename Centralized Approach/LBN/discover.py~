#!/usr/bin/env python
import getopt
import socket
import sys
import time

from coapthon.client.helperclient import HelperClient
from coapthon.utils import parse_uri

__author__ = 'Helal Turna'

client = None


def usage():  # pragma: no cover
    print "Command:\tcoapclient.py -o -p [-P]"
    print "Options:"
    print "\t-o, --operation=\tGET|PUT|POST|DELETE|DISCOVER|OBSERVE"
    print "\t-p, --path=\t\t\tPath of the request"
    print "\t-P, --payload=\t\tPayload of the request"
    print "\t-f, --payload-file=\t\tFile with payload of the request"


def client_callback(response):
    print "Callback"


def client_callback_observe(response):  # pragma: no cover
    global client
    print "Callback_observe"
    check = True
    while check:
        chosen = raw_input("Stop observing? [y/N]: ")
        if chosen != "" and not (chosen == "n" or chosen == "N" or chosen == "y" or chosen == "Y"):
            print "Unrecognized choose."
            continue
        elif chosen == "y" or chosen == "Y":
            while True:
                rst = raw_input("Send RST message? [Y/n]: ")
                if rst != "" and not (rst == "n" or rst == "N" or rst == "y" or rst == "Y"):
                    print "Unrecognized choose."
                    continue
                elif rst == "" or rst == "y" or rst == "Y":
                    client.cancel_observing(response, True)
                else:
                    client.cancel_observing(response, False)
                check = False
                break
        else:
            break


def main():  # pragma: no cover
    global client
    op = None
    path = None
    payload = None
    pathArray =  ["aaaa::212:7403:3:303","aaaa::212:7407:7:707"
	]
	
    
    
    total = 0;
    count = 0;

    

    services ="" 
    #file = open('36nodes_06_ellipse_outside_1.txt','w')
    for i in range(1):
	path = "coap://["+pathArray[i]+"]:5683/"
	host, port, path = parse_uri(path)
    	try:
        	tmp = socket.gethostbyname(host)
        	host = tmp
    	except socket.gaierror:
        	pass
    	client = HelperClient(server=(host, port))
	start = time.time()
	print(count)    
	response = client.discover()
	ip = pathArray[i]
	time.sleep(0.6)
        services = response.pretty_print()

    #file.write('AVG RTT = '+str(avgTime))


    onlyallservice =""
    string = services.splitlines()
    for string in string:
	if string.find("sensors")!=-1:
	    onlyallservice = string	

    allservicelist = []
    in1 = 0
    in2 = 0
    onlyallservice1 =onlyallservice.split("</")
    for onlyallservice1 in onlyallservice1:
	if onlyallservice1.find("sensors")!=-1:
            in1 = onlyallservice1.find("/")
	    in2 = onlyallservice1.find(">;")
	    allservicelist.append(onlyallservice1[in1+1:in2])
	
    print("\n\n\n\nThis node contains those services : ")    
    for allservicelist in allservicelist:
	print(allservicelist.capitalize())
    print("\n\n\n\n") 
    services = services + "ghghgghg gghggh "
    path = "coap://[127.0.0.2]:5683/big"
    strd = "pycharm community"
    host, port, path = parse_uri(path)
    try:
        tmp = socket.gethostbyname(host)
        host = tmp
    except socket.gaierror:
        pass
    client = HelperClient(server=(host, port))
    client.post(path,services)
    #print('AVG='+str(avgTime))
    #file.close()
	
    client.stop()
   


if __name__ == '__main__':  # pragma: no cover
    main()
